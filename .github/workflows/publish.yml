name: Publish Python Package

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 0.1.0)'
        required: true
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        
    - name: Install dependencies
      run: poetry install
      
    - name: Update version if specified
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.version != ''
      run: |
        poetry version ${{ github.event.inputs.version }}
        VERSION=${{ github.event.inputs.version }}
        sed -i "s/__version__ = \".*\"/__version__ = \"$VERSION\"/" src/shapxplain/__init__.py
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add src/shapxplain/__init__.py pyproject.toml
        git commit -m "Bump version to $VERSION"
        git tag -a "v$VERSION" -m "Release $VERSION"
        git push origin HEAD:main
        git push origin "v$VERSION"
        
    - name: Run tests
      run: poetry run pytest
      
    - name: Build and publish
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        poetry config pypi-token.pypi $POETRY_PYPI_TOKEN_PYPI
        poetry build
        poetry publish --no-interaction